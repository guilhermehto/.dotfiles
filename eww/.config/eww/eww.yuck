(defwindow bar
  :monitor 0
  :geometry (geometry :x "0%"
                      :y "12px"
                      :width "99%"
                      :height "35px"
                      :anchor "top center")
  :stacking "fg"
  :exclusive true
 (centerbox
    :orientation "h"

    (box 
      :halign "start"
      :space-evenly false
      :class "container"
      (label :text "Batata")
    )

    (box 
      :space-evenly false
      :halign "center"
      :class "container"
      :spacing 12
      (date)
      (clock)
    )

    (box 
      :space-evenly false
      :halign "end"
      :class "container"
      :spacing 12
      (disk)
      (ram)
      (cpu)
  ))
)

(defpoll time :interval "1s"
  `date +%H:%M`)

(defpoll current_date :interval "300s"
  `date '+%A %B %d'`
)


(defwidget clock []
  (box 
    :halign "end"
    :space-evenly false
    (label :class "icon" :text "󰥔")
    (label :text time)
))

(defwidget date []
  (box 
    :halign "end"
    :space-evenly false
    (label :class "icon" :text "󰃭")
    (label :text current_date)
))

(defwidget disk []
  (box 
    :halign "end"
    :space-evenly false
    (label :class "icon" :text "")
    (label :text "${floor(EWW_DISK['/'].free/1024/1024/1024)}gb")
))

(defwidget ram []
  (box 
    :halign "end"
    :space-evenly false
    (label :class "icon" :text "")
    (label :text "${floor(EWW_RAM.used_mem_perc)}%")
))


(defwidget cpu []
  (box 
    :halign "end"
    :space-evenly false
    (label :class "icon" :text "")
    (label :text "${floor(EWW_CPU.avg)}%")
))

(defwidget network []
  (box 
    :halign "end"
    :space-evenly false
    (label :class "icon" :text "")
    ;; (label :text "${floor(EWW_NET['wlan0'].up)}%")
    (label :text "${floor(EWW_NET['wlan0'].NET_DOWN/1000)}kb/s")
))
